{
    "beaker": "2",
    "evaluators": [
        {
            "name": "HTML",
            "plugin": "HTML",
            "view": {
                "cm": {
                    "mode": "htmlmixed"
                }
            }
        },
        {
            "name": "JavaScript",
            "plugin": "JavaScript",
            "view": {
                "cm": {
                    "mode": "javascript",
                    "background": "#FFE0F0"
                }
            }
        },
        {
            "name": "R",
            "plugin": "R",
            "view": {
                "cm": {
                    "mode": "r"
                }
            }
        },
        {
            "name": "Python3",
            "plugin": "Python3",
            "setup": "%matplotlib inline\nimport numpy\nimport matplotlib\nfrom matplotlib import pylab, mlab, pyplot\nnp = numpy\nplt = pyplot\nfrom IPython.display import display\nfrom IPython.core.pylabtools import figsize, getfigs\nfrom pylab import *\nfrom numpy import *\n",
            "view": {
                "cm": {
                    "mode": "python"
                }
            }
        }
    ],
    "cells": [
        {
            "id": "codeVombd0",
            "type": "code",
            "evaluator": "HTML",
            "input": {
                "body": [
                    "<style>",
                    "",
                    ".graticule {",
                    "  fill: none;",
                    "  stroke: #777;",
                    "  stroke-width: .5px;",
                    "  stroke-opacity: .5;",
                    "}",
                    "",
                    ".land {",
                    "  fill: steelblue",
                    "}",
                    "",
                    ".boundary {",
                    "  fill: none;",
                    "  stroke: #fff;",
                    "  stroke-width: .5px;",
                    "}",
                    "",
                    "</style>"
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "type": "BeakerDisplay",
                    "innertype": "Html",
                    "object": "<script>\nvar beaker = bkHelper.getBeakerObject().beakerObj;\n</script>\n<style>\n\n.graticule {\n  fill: none;\n  stroke: #777;\n  stroke-width: .5px;\n  stroke-opacity: .5;\n}\n\n.land {\n  fill: steelblue\n}\n\n.boundary {\n  fill: none;\n  stroke: #fff;\n  stroke-width: .5px;\n}\n\n</style>"
                },
                "selectedType": "BeakerDisplay",
                "pluginName": "JavaScript",
                "elapsedTime": 0,
                "height": 51
            },
            "evaluatorReader": true,
            "lineCount": 20
        },
        {
            "id": "codebVqDiy",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "var width = 1300,",
                    "    height = 600;",
                    "",
                    "var projection = d3.geo.mercator()",
                    "    .center([70, 48])",
                    "    .scale(650)",
                    "    .rotate([-180,0]);",
                    "",
                    "var path = d3.geo.path()",
                    "    .projection(projection);",
                    "",
                    "var graticule = d3.geo.graticule();",
                    "",
                    "var svg = d3.select(\"body\").append(\"svg\")",
                    "    .attr(\"width\", width)",
                    "    .attr(\"height\", height);",
                    "",
                    "svg.append(\"path\")",
                    "    .datum(graticule)",
                    "    .attr(\"class\", \"graticule\")",
                    "    .attr(\"d\", path);",
                    "",
                    "function draw_world(error, world) {",
                    "  if (error) throw error;",
                    "",
                    "  svg.insert(\"path\", \".graticule\")",
                    "      .datum(topojson.feature(world, world.objects.land))",
                    "      .attr(\"class\", \"land\")",
                    "      .attr(\"d\", path);",
                    "",
                    "  svg.insert(\"path\", \".graticule\")",
                    "      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))",
                    "      .attr(\"class\", \"boundary\")",
                    "      .attr(\"d\", path);",
                    "};",
                    "",
                    "",
                    "function draw_network(network_data){",
                    "      var connection = svg.selectAll(\".connection\")",
                    "    .data(network_data['links'])",
                    "    .enter().append(\"g\")",
                    "    .attr(\"class\",\"connection\")",
                    "    .append(\"line\")",
                    "    .style(\"stroke\",\"black\")",
                    "    .attr(\"x1\", function(d){return projection(d['lon_lat_1'])[0]})",
                    "    .attr(\"y1\", function(d){return projection(d['lon_lat_1'])[1]})",
                    "    .attr(\"x2\", function(d){return projection(d['lon_lat_2'])[0]})",
                    "    .attr(\"y2\", function(d){return projection(d['lon_lat_2'])[1]})",
                    "",
                    "    var node = svg.selectAll(\".node\")",
                    "    .data(network_data['nodes'])",
                    "    .enter().append(\"g\")",
                    "    .attr(\"class\",\"node\")",
                    "    .append(\"circle\")",
                    "    .attr(\"cx\", function (d) {return projection(d['GPS_lon_lat'])[0]; })",
                    "    .attr(\"cy\", function (d) {return projection(d['GPS_lon_lat'])[1]; })",
                    "    .attr(\"r\", \"4px\")",
                    "    .attr(\"fill\", \"red\")",
                    "}",
                    "d3.select(self.frameElement).style(\"height\", height + \"px\");",
                    "d3.json(\"C:\\\\Users\\\\macle\\\\Desktop\\\\UPC Masters\\\\Semester 1\\\\CN\\MAI-CN\\\\Final Project\\\\world.json\", draw_world)",
                    "d3.json(\"C:\\\\Users\\\\macle\\\\Desktop\\\\UPC Masters\\\\Semester 1\\\\CN\\MAI-CN\\\\Final Project\\\\network.json\", draw_network)",
                    "",
                    "bkHelper.loadList([\"http://d3js.org/topojson.v1.min.js\"],",
                    "                  function() {",
                    "                    document.getElementById(\"sketch\").innerHTML = \"\";",
                    "                    var p = new p5(sketch, \"sketch\");",
                    "                  });"
                ]
            },
            "output": {
                "state": {},
                "selectedType": "BeakerDisplay",
                "pluginName": "JavaScript",
                "elapsedTime": 54,
                "height": 77
            },
            "evaluatorReader": true,
            "lineCount": 68
        },
        {
            "id": "codeWSJpIy",
            "type": "code",
            "evaluator": "Python3",
            "input": {
                "body": [
                    "import json",
                    "with open(\"network.json\",\"r\") as f:",
                    "    data = json.load(f)",
                    "print (data['nodes'][0])"
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "type": "Results",
                    "outputdata": [
                        {
                            "type": "out",
                            "value": "{'id': '9muqdd0q8tpj', 'Supercharger': 'San Juan Capistrano, CA', 'lon': -117.6632, 'City': 'San Juan Capistrano', 'lat': 33.498458, 'Country': 'USA', 'Zip': '92675', 'GPS': '33.498458, -117.6632', 'geohash': '9muqdd0q8tpj', 'SC_data': {'Wifi': ['Starbucks'], 'Charging': ['7 Supercharger stalls, available 24/7'], 'Restaurants': ['Starbucks', 'El Adobe de Capistrano', \"Mollie's Famous Cafe\", 'El Campeon Carnieria', 'Cafe Mozart', 'KFC', 'Pizza Hut', 'El Molino de Oro'], 'Restrooms': ['Starbucks'], 'Public Charging': ['2 J-1772', '33633 Camino Capistrano', 'San Juan Capistrano, CA 92675']}, 'city_state': 'SanJuanCapistrano_CA', 'Elev': '30', 'Thread': 'http://supercharge.info/service/supercharge/discuss?siteId=122', 'GPS_lon_lat': [-117.6632, 33.498458], 'Stalls': 7.0, 'Status': 'Open', 'Open Date': '5/6/2014', 'Street Address': '31971 Camino Capistrano', 'State': 'CA', 'Tesla': 'http://www.teslamotors.com/findus/location/supercharger/sanjuancapistranosupercharger'}\n"
                        }
                    ]
                },
                "selectedType": "Results",
                "pluginName": "Python3",
                "shellId": "E07BE29D9600420D8BD84613BB88EB53",
                "elapsedTime": 230,
                "height": 55
            },
            "evaluatorReader": true,
            "lineCount": 4
        },
        {
            "id": "codez8TATZ",
            "type": "code",
            "evaluator": "Python3",
            "input": {
                "body": [
                    ""
                ]
            },
            "output": {
                "state": {}
            },
            "evaluatorReader": true
        }
    ],
    "namespace": {}
}
